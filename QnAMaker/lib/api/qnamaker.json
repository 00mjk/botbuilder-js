{
  "alterations": {
    "className": "Alterations",
    "url": "/alterations",
    "operations": {
      "replaceAlterations": {
        "name": "replaceAlterations",
        "method": "put",
        "methodAlias": "replace",
        "target": [
          "alterations"
        ],
        "command": "qnamaker replace alterations --in wordAlterations.json",
        "pathFragment": "",
        "description": "",
        "entityName": "wordAlterations",
        "entityType": "WordAlterationsDTO"
      },
      "downloadAlterations": {
        "name": "download alterations",
        "method": "get",
        "methodAlias": "list",
        "target": [
          "alterations"
        ],
        "command": "qnamaker list alterations",
        "pathFragment": "",
        "description": ""
      }
    }
  },
  "endpointkeys": {
    "className": "Endpointkeys",
    "url": "/endpointkeys",
    "operations": {
      "getEndpointKeys": {
        "name": "getEndpointKeys",
        "method": "get",
        "methodAlias": "list",
        "target": [
          "endpointkeys"
        ],
        "command": "qnamaker list endpointkeys",
        "pathFragment": "",
        "description": ""
      },
      "refreshEndpointKeys": {
        "name": "refreshEndpointKeys",
        "method": "patch",
        "methodAlias": "refresh",
        "target": [
          "endpointkeys"
        ],
        "command": "qnamaker refresh endpointkeys --keyType <string>",
        "pathFragment": "",
        "params": [
          {
            "type": "string",
            "name": "keyType",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "description": "type of Key"
          }
        ],
        "description": ""
      }
    }
  },
  "knowledgebases": {
    "className": "Knowledgebases",
    "url": "/knowledgebases",
    "operations": {
      "getKnowledgebasesForUser": {
        "name": "getKnowledgebasesForUser",
        "method": "get",
        "methodAlias": "get",
        "target": [
          "knowledgebase"
        ],
        "command": "qnamaker get knowledgebase",
        "pathFragment": "",
        "description": ""
      },
      "replaceKnowledgebase": {
        "name": "replaceKnowledgebase",
        "method": "put",
        "methodAlias": "get",
        "target": [
          "kb",
          "knowledgebase"
        ],
        "command": "qnamaker replace kb --in replaceKb.json --kbId <string>",
        "pathFragment": "",
        "params": [
          {
            "type": "string",
            "name": "kbId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "description": "Knowledgebase id"
          }
        ],
        "description": "",
        "entityName": "replaceKb",
        "entityType": "ReplaceKbDTO"
      },
      "publishKnowledgebase": {
        "name": "publishKnowledgebase",
        "method": "post",
        "methodAlias": "create",
        "target": [
          "kb",
          "knowledgebase"
        ],
        "command": "qnamaker create kb --kbId <string>",
        "pathFragment": "",
        "params": [
          {
            "type": "string",
            "name": "kbId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "description": "Knowledgebase id"
          }
        ],
        "description": ""
      },
      "deleteKnowledgebase": {
        "name": "deleteKnowledgebase",
        "method": "delete",
        "methodAlias": "delete",
        "target": [
          "kb",
          "knowledgebase"
        ],
        "command": "qnamaker delete kb --kbId <string>",
        "pathFragment": "",
        "params": [
          {
            "type": "string",
            "name": "kbId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "description": "Knowledgebase id."
          }
        ],
        "description": ""
      },
      "getKnowledgebaseDetails": {
        "name": "getKnowledgebaseDetails",
        "method": "get",
        "methodAlias": "get",
        "target": [
          "kb",
          "knowledgebase"
        ],
        "command": "qnamaker get kb --kbId <string>",
        "pathFragment": "",
        "params": [
          {
            "type": "string",
            "name": "kbId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "description": "Knowledgebase id."
          }
        ],
        "description": ""
      }
    }
  },
  "createasync": {
    "className": "Createasync",
    "url": "/knowledgebases/createasync",
    "operations": {
      "createKnowledgebase": {
        "name": "createKnowledgebase",
        "method": "post",
        "methodAlias": "create",
        "target": [
          "kb",
          "knowledgebase"
        ],
        "command": "qnamaker create kb --in createKbPayload.json",
        "pathFragment": "",
        "description": "",
        "entityName": "createKbPayload",
        "entityType": "CreateKbDTO"
      }
    }
  },
  "UpdateAsync": {
    "className": "UpdateAsync",
    "url": "/knowledgebases/{kbId}/UpdateAsync",
    "operations": {
      "updateKnowledgebase": {
        "name": "updateKnowledgebase",
        "method": "patch",
        "methodAlias": "update",
        "target": [
          "kb",
          "knowledgebase"
        ],
        "command": "qnamaker update kb --in updateKb.json --kbId <string>",
        "pathFragment": "",
        "params": [
          {
            "type": "string",
            "name": "kbId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "description": "Knowledgebase id"
          }
        ],
        "description": "",
        "entityName": "updateKb",
        "entityType": "UpdateKbOperationDTO"
      }
    }
  },
  "qna": {
    "className": "Qna",
    "url": "/knowledgebases/{kbId}/{environment}/qna",
    "operations": {
      "downloadKnowledgebase": {
        "name": "downloadKnowledgebase",
        "method": "get",
        "methodAlias": "download",
        "target": [
          "kb",
          "knowledgebase"
        ],
        "command": "qnamaker download kb --kbId <string> --environment <string>",
        "pathFragment": "",
        "params": [
          {
            "type": "string",
            "name": "kbId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "description": "Knowledgebase id"
          },
          {
            "type": "string",
            "name": "environment",
            "in": "path",
            "required": true,
            "x-schema": {
              "$ref": "#/definitions/KnowledgebaseEnvironment"
            },
            "x-nullable": false,
            "description": "Specifies whether environment is Test or Prod.",
            "enum": [
              "Prod",
              "Test"
            ]
          }
        ],
        "description": ""
      }
    }
  },
  "operations": {
    "className": "Operations",
    "url": "/operations/{operationId}",
    "operations": {
      "getOperationDetails": {
        "name": "getOperationDetails",
        "method": "get",
        "methodAlias": "get",
        "target": [
          "OperationDetails",
          "operationdetails"
        ],
        "command": "qnamaker get OperationDetails --operationId <string>",
        "pathFragment": "",
        "params": [
          {
            "type": "string",
            "name": "operationId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "description": "Operation id."
          }
        ],
        "description": ""
      }
    }
  }
}