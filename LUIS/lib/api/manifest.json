{
  "patterns": {
    "className": "Patterns",
    "url": "/apps/{appId}/versions/{versionId}/patterns",
    "operations": [
      {
        "description": "Gets all application version pattern features.",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getVersionPatternFeatureList"
      },
      {
        "description": "Creates a new pattern feature.",
        "pathFragment": "",
        "params": [],
        "method": "post",
        "name": "createPatternFeature",
        "entityName": "patternCreateObject",
        "entityType": "PatternCreateObject"
      },
      {
        "description": "Deletes a pattern feature from an application version.",
        "pathFragment": "/{patternId}",
        "params": [
          {
            "name": "patternId",
            "in": "path",
            "description": "The ID of the pattern feature to be deleted.",
            "required": true,
            "type": "integer"
          }
        ],
        "method": "delete",
        "name": "deletePatternFeature"
      },
      {
        "description": "Updates the pattern, the name and the state of the pattern feature.",
        "pathFragment": "/{patternId}",
        "params": [
          {
            "name": "patternId",
            "in": "path",
            "description": "The ID of the feature to be updated.",
            "required": true,
            "type": "integer"
          }
        ],
        "method": "put",
        "name": "updatePatternFeature",
        "entityName": "patternUpdateObject",
        "entityType": "PatternUpdateObject"
      },
      {
        "description": "Gets pattern feature info.",
        "pathFragment": "/{patternId}",
        "params": [
          {
            "name": "patternId",
            "in": "path",
            "description": "The pattern feature ID.",
            "required": true,
            "type": "integer"
          }
        ],
        "method": "get",
        "name": "getPatternFeatureInfo"
      }
    ]
  },
  "phraselists": {
    "className": "Phraselists",
    "url": "/apps/{appId}/versions/{versionId}/phraselists",
    "operations": [
      {
        "description": "Gets all application phraselist features.",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getVersionPhraselistFeaturesList"
      },
      {
        "description": "Creates a new phraselist feature.",
        "pathFragment": "",
        "params": [],
        "method": "post",
        "name": "createPhraselistFeature",
        "entityName": "phraselistCreateObject",
        "entityType": "PhraselistCreateObject"
      },
      {
        "description": "Deletes a phraselist feature from an application.",
        "pathFragment": "/{phraselistId}",
        "params": [
          {
            "name": "phraselistId",
            "in": "path",
            "description": "The ID of the feature to be deleted.",
            "required": true,
            "type": "integer"
          }
        ],
        "method": "delete",
        "name": "deletePhraselistFeature"
      },
      {
        "description": "Updates the phrases, the state and the name of the phraselist feature.",
        "pathFragment": "/{phraselistId}",
        "params": [
          {
            "name": "phraselistId",
            "in": "path",
            "description": "The ID of the feature to be updated.",
            "required": true,
            "type": "integer"
          }
        ],
        "method": "put",
        "name": "updatePhraselistFeature",
        "entityName": "phraselistUpdateObject",
        "entityType": "PhraselistUpdateObject"
      },
      {
        "description": "Gets phraselist feature info.",
        "pathFragment": "/{phraselistId}",
        "params": [
          {
            "name": "phraselistId",
            "in": "path",
            "description": "The phraselist feature ID.",
            "required": true,
            "type": "integer"
          }
        ],
        "method": "get",
        "name": "getPhraselistFeatureInfo"
      }
    ]
  },
  "features": {
    "className": "Features",
    "url": "/apps/{appId}/versions/{versionId}/features",
    "operations": [
      {
        "description": "Gets all application version features.",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getVersionFeatures"
      }
    ]
  },
  "example": {
    "className": "Example",
    "url": "/apps/{appId}/versions/{versionId}/example",
    "operations": [
      {
        "description": "Adds a labeled example to the application.",
        "pathFragment": "",
        "params": [],
        "method": "post",
        "name": "addLabel",
        "entityName": "exampleLabelObject",
        "entityType": "ExampleLabelObject"
      }
    ]
  },
  "examples": {
    "className": "Examples",
    "url": "/apps/{appId}/versions/{versionId}/examples",
    "operations": [
      {
        "description": "Returns examples to be reviewed.",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "reviewLabeledExamples"
      },
      {
        "description": "Adds a batch of labeled examples to the specified application. \r\n\r\nThe maximum batch size is 100 items. \r\n\r\nIf the item has the ExampleId and a value between 0 - 99, the returned result will also include the ExampleId. This is helpful if items have errors. \r\n\r\nSome items can pass while others fail. The returned result will indicate each item's status. \r\n",
        "pathFragment": "",
        "params": [],
        "method": "post",
        "name": "batchAddLabels",
        "entityName": "exampleLabelObjectArray",
        "entityType": "ExampleLabelObjectArray"
      },
      {
        "description": "Deletes the label with the specified ID.",
        "pathFragment": "/{exampleId}",
        "params": [
          {
            "name": "exampleId",
            "in": "path",
            "description": "The example ID.",
            "required": true,
            "type": "integer"
          }
        ],
        "method": "delete",
        "name": "deleteExampleLabels"
      }
    ]
  },
  "intents": {
    "className": "Intents",
    "url": "/apps/{appId}/versions/{versionId}/intents",
    "operations": [
      {
        "description": "Gets information about the intent models.",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getVersionIntentList"
      },
      {
        "description": "Adds an intent classifier to the application.",
        "pathFragment": "",
        "params": [],
        "method": "post",
        "name": "createIntent",
        "entityName": "modelCreateObject",
        "entityType": "ModelCreateObject"
      },
      {
        "description": "Deletes an intent classifier from the application.",
        "pathFragment": "/{intentId}",
        "params": [
          {
            "name": "intentId",
            "in": "path",
            "description": "Format - guid. The intent classifier ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "delete",
        "name": "deleteIntent"
      },
      {
        "description": "Updates the name of an intent classifier.",
        "pathFragment": "/{intentId}",
        "params": [
          {
            "name": "intentId",
            "in": "path",
            "description": "Format - guid. The intent classifier ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "put",
        "name": "renameIntent",
        "entityName": "modelUpdateObject",
        "entityType": "ModelUpdateObject"
      },
      {
        "description": "Gets information about the intent model.",
        "pathFragment": "/{intentId}",
        "params": [
          {
            "name": "intentId",
            "in": "path",
            "description": "Format - guid. The intent classifier ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "get",
        "name": "getIntent"
      },
      {
        "description": "Suggests examples that would improve the accuracy of the intent model.",
        "pathFragment": "/{intentId}/suggest",
        "params": [
          {
            "name": "intentId",
            "in": "path",
            "description": "Format - guid. The target intent classifier model to enhance.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "get",
        "name": "suggestEndpointQueriesForIntents"
      }
    ]
  },
  "entities": {
    "className": "Entities",
    "url": "/apps/{appId}/versions/{versionId}/entities",
    "operations": [
      {
        "description": "Gets information about the entity models.",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getVersionEntityList"
      },
      {
        "description": "Adds an entity extractor to the application.",
        "pathFragment": "",
        "params": [],
        "method": "post",
        "name": "createEntity",
        "entityName": "modelCreateObject",
        "entityType": "ModelCreateObject"
      },
      {
        "description": "Deletes an entity extractor from the application.",
        "pathFragment": "/{entityId}",
        "params": [
          {
            "name": "entityId",
            "in": "path",
            "description": "Format - guid. The entity extractor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "delete",
        "name": "deleteEntity"
      },
      {
        "description": "Updates the name of an entity extractor.",
        "pathFragment": "/{entityId}",
        "params": [
          {
            "name": "entityId",
            "in": "path",
            "description": "Format - guid. The entity extractor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "put",
        "name": "renameEntity",
        "entityName": "modelUpdateObject",
        "entityType": "ModelUpdateObject"
      },
      {
        "description": "Gets information about the entity model.",
        "pathFragment": "/{entityId}",
        "params": [
          {
            "name": "entityId",
            "in": "path",
            "description": "Format - guid. The entity extractor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "get",
        "name": "getEntity"
      },
      {
        "description": "Suggests examples that would improve the accuracy of the entity model.",
        "pathFragment": "/{entityId}/suggest",
        "params": [
          {
            "name": "entityId",
            "in": "path",
            "description": "Format - guid. The target entity extractor model to enhance.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "get",
        "name": "suggestEndpointQueriesForEntities"
      }
    ]
  },
  "hierarchicalentities": {
    "className": "Hierarchicalentities",
    "url": "/apps/{appId}/versions/{versionId}/hierarchicalentities",
    "operations": [
      {
        "description": "Gets information about the hierarchical entity models.",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getVersionHierarchicalEntityList"
      },
      {
        "description": "Adds a hierarchical entity extractor to the application version.",
        "pathFragment": "",
        "params": [],
        "method": "post",
        "name": "createHierarchicalEntity",
        "entityName": "hierarchicalModelCreateObject",
        "entityType": "HierarchicalModelCreateObject"
      },
      {
        "description": "Deletes a hierarchical entity extractor from the application version.",
        "pathFragment": "/{hEntityId}",
        "params": [
          {
            "name": "hEntityId",
            "in": "path",
            "description": "Format - guid. The hierarchical entity extractor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "delete",
        "name": "deleteHierarchicalEntity"
      },
      {
        "description": "Updates the name and children of a hierarchical entity model.",
        "pathFragment": "/{hEntityId}",
        "params": [
          {
            "name": "hEntityId",
            "in": "path",
            "description": "Format - guid. The hierarchical entity extractor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "put",
        "name": "updateHierarchicalEntity",
        "entityName": "hierarchicalModelUpdateObject",
        "entityType": "HierarchicalModelUpdateObject"
      },
      {
        "description": "Gets information about the hierarchical entity model.",
        "pathFragment": "/{hEntityId}",
        "params": [
          {
            "name": "hEntityId",
            "in": "path",
            "description": "Format - guid. The hierarchical entity extractor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "get",
        "name": "getHierarchicalEntity"
      },
      {
        "description": "Deletes a hierarchical entity extractor child from the application.",
        "pathFragment": "/{hEntityId}/children/{hChildId}",
        "params": [
          {
            "name": "hEntityId",
            "in": "path",
            "description": "Format - guid. The hierarchical entity extractor ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hChildId",
            "in": "path",
            "description": "Format - guid. The hierarchical entity extractor child ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "delete",
        "name": "deleteHierarchicalChildEntity "
      },
      {
        "description": "Renames a single child in an existing hierarchical entity model.",
        "pathFragment": "/{hEntityId}/children/{hChildId}",
        "params": [
          {
            "name": "hEntityId",
            "in": "path",
            "description": "Format - guid. The hierarchical entity extractor ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hChildId",
            "in": "path",
            "description": "Format - guid. The hierarchical entity extractor child ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "put",
        "name": "updateHierarchicalChildEntity ",
        "entityName": "body",
        "entityType": ""
      },
      {
        "description": "Gets information about the hierarchical entity child model.",
        "pathFragment": "/{hEntityId}/children/{hChildId}",
        "params": [
          {
            "name": "hEntityId",
            "in": "path",
            "description": "Format - guid. The hierarchical entity extractor parent ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hChildId",
            "in": "path",
            "description": "Format - guid. The hierarchical entity extractor child ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "get",
        "name": "getHierarchicalChildEntity"
      },
      {
        "description": "Creates a single child in an existing hierarchical entity model.",
        "pathFragment": "/{hEntityId}/children",
        "params": [
          {
            "name": "hEntityId",
            "in": "path",
            "description": "Format - guid. The hierarchical entity extractor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "post",
        "name": "createHierarchicalChildEntity ",
        "entityName": "body",
        "entityType": ""
      }
    ]
  },
  "compositeentities": {
    "className": "Compositeentities",
    "url": "/apps/{appId}/versions/{versionId}/compositeentities",
    "operations": [
      {
        "description": "Gets information about the composite entity models.",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getVersionCompositeEntityList"
      },
      {
        "description": "Adds a composite entity extractor to the application.",
        "pathFragment": "",
        "params": [],
        "method": "post",
        "name": "createCompositeEntity",
        "entityName": "hierarchicalModelCreateObject",
        "entityType": "HierarchicalModelCreateObject"
      },
      {
        "description": "Deletes a composite entity extractor from the application.",
        "pathFragment": "/{cEntityId}",
        "params": [
          {
            "name": "cEntityId",
            "in": "path",
            "description": "Format - guid. The composite entity extractor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "delete",
        "name": "deleteCompositeEntity"
      },
      {
        "description": "Updates the composite entity extractor.",
        "pathFragment": "/{cEntityId}",
        "params": [
          {
            "name": "cEntityId",
            "in": "path",
            "description": "Format - guid. The composite entity extractor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "put",
        "name": "updateCompositeEntity",
        "entityName": "hierarchicalModelUpdateObject",
        "entityType": "HierarchicalModelUpdateObject"
      },
      {
        "description": "Gets information about the composite entity model.",
        "pathFragment": "/{cEntityId}",
        "params": [
          {
            "name": "cEntityId",
            "in": "path",
            "description": "Format - guid. The composite entity extractor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "get",
        "name": "getCompositeEntity"
      },
      {
        "description": "Creates a single child in an existing composite entity model.",
        "pathFragment": "/{cEntityId}/children",
        "params": [
          {
            "name": "cEntityId",
            "in": "path",
            "description": "Format - guid. The composite entity extractor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "post",
        "name": "createCompositeChildEntity",
        "entityName": "body",
        "entityType": ""
      },
      {
        "description": "Deletes a composite entity extractor child from the application.",
        "pathFragment": "/{cEntityId}/children/{cChildId}",
        "params": [
          {
            "name": "cEntityId",
            "in": "path",
            "description": "Format - guid. The hierarchical entity extractor ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cChildId",
            "in": "path",
            "description": "Format - guid. The hierarchical entity extractor child ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "delete",
        "name": "deleteCompositeChildEntity "
      }
    ]
  },
  "closedlists": {
    "className": "Closedlists",
    "url": "/apps/{appId}/versions/{versionId}/closedlists",
    "operations": [
      {
        "description": "Gets information about the closedlist models.",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getVersionClosedlistList"
      },
      {
        "description": "Adds a list entity to the LUIS app.",
        "pathFragment": "",
        "params": [],
        "method": "post",
        "name": "createClosedListEntity",
        "entityName": "closedListModelCreateObject",
        "entityType": "ClosedListModelCreateObject"
      },
      {
        "description": "Deletes a closed list model from the application.",
        "pathFragment": "/{clEntityId}",
        "params": [
          {
            "name": "clEntityId",
            "in": "path",
            "description": "Format - guid. The closed list entity extractor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "delete",
        "name": "deleteClosedListEntity"
      },
      {
        "description": "Adds a batch of sublists to an existing closedlist.",
        "pathFragment": "/{clEntityId}",
        "params": [
          {
            "name": "clEntityId",
            "in": "path",
            "description": "Format - guid. The closed list entity extractor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "patch",
        "name": "patchClosedListEntity",
        "entityName": "closedListModelPatchObject",
        "entityType": "ClosedListModelPatchObject"
      },
      {
        "description": "Updates the closed list model.",
        "pathFragment": "/{clEntityId}",
        "params": [
          {
            "name": "clEntityId",
            "in": "path",
            "description": "Format - guid. The closed list entity extractor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "put",
        "name": "updateClosedListEntity",
        "entityName": "closedListModelUpdateObject",
        "entityType": "ClosedListModelUpdateObject"
      },
      {
        "description": "Gets information of a closed list model.",
        "pathFragment": "/{clEntityId}",
        "params": [
          {
            "name": "clEntityId",
            "in": "path",
            "description": "Format - guid. The closed list model ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "get",
        "name": "getClosedListEntity"
      },
      {
        "description": "Updates one of the closed list's sublists",
        "pathFragment": "/{clEntityId}/sublists/{subListId}",
        "params": [
          {
            "name": "clEntityId",
            "in": "path",
            "description": "Format - guid. The closedlist ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subListId",
            "in": "path",
            "description": "Format - long. The sublist ID",
            "required": true,
            "type": "string"
          }
        ],
        "method": "put",
        "name": "updateClosedlistsSublist",
        "entityName": "wordListBaseUpdateObject",
        "entityType": "WordListBaseUpdateObject"
      },
      {
        "description": "Deletes a sublist of a specified list entity.",
        "pathFragment": "/{clEntityId}/sublists/{subListId}",
        "params": [
          {
            "name": "clEntityId",
            "in": "path",
            "description": "Format - guid. The closed list entity extractor ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subListId",
            "in": "path",
            "description": "The sublist ID.",
            "required": true,
            "type": "integer"
          }
        ],
        "method": "delete",
        "name": "deleteSublistEntity"
      },
      {
        "description": "Adds a list to an existing closed list",
        "pathFragment": "/{clEntityId}/sublists",
        "params": [
          {
            "name": "clEntityId",
            "in": "path",
            "description": "Format - guid. The closed list entity extractor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "post",
        "name": "addClosedListsSublist",
        "entityName": "wordListCreateObject",
        "entityType": "WordListCreateObject"
      }
    ]
  },
  "prebuilts": {
    "className": "Prebuilts",
    "url": "/apps/{appId}/versions/{versionId}/prebuilts",
    "operations": [
      {
        "description": "Gets information about the prebuilt entity models.",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getVersionPrebuiltEntityList"
      },
      {
        "description": "Adds a list of prebuilt entity extractors to the application.",
        "pathFragment": "",
        "params": [],
        "method": "post",
        "name": "addPrebuiltEntityList",
        "entityName": "prebuiltExtractorNames",
        "entityType": "PrebuiltExtractorNames"
      },
      {
        "description": "Deletes a prebuilt entity extractor from the application.",
        "pathFragment": "/{prebuiltId}",
        "params": [
          {
            "name": "prebuiltId",
            "in": "path",
            "description": "Format - guid. The prebuilt entity extractor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "delete",
        "name": "deletePrebuiltEntity"
      },
      {
        "description": "Gets information about the prebuilt entity model.",
        "pathFragment": "/{prebuiltId}",
        "params": [
          {
            "name": "prebuiltId",
            "in": "path",
            "description": "Format - guid. The prebuilt entity extractor ID.",
            "required": true,
            "type": "string"
          }
        ],
        "method": "get",
        "name": "getPrebuiltEntity"
      }
    ]
  },
  "listprebuilts": {
    "className": "Listprebuilts",
    "url": "/apps/{appId}/versions/{versionId}/listprebuilts",
    "operations": [
      {
        "description": "Gets all the available prebuilt entities for the application based on the application's culture.",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getAvailablePrebuiltEntityList"
      }
    ]
  },
  "models": {
    "className": "Models",
    "url": "/apps/{appId}/versions/{versionId}/models",
    "operations": [
      {
        "description": "Gets information about the application version models.",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getVersionModelList"
      }
    ]
  },
  "apps": {
    "className": "Apps",
    "url": "/apps/",
    "operations": [
      {
        "description": "Lists all of the user applications.",
        "pathFragment": "/",
        "params": [],
        "method": "get",
        "name": "getApplicationsList"
      },
      {
        "description": "Creates a new LUIS app.",
        "pathFragment": "/",
        "params": [],
        "method": "post",
        "name": "addApplication",
        "entityName": "applicationCreateObject",
        "entityType": "ApplicationCreateObject"
      },
      {
        "description": "Deletes an application.",
        "pathFragment": "/{appId}",
        "params": [],
        "method": "delete",
        "name": "deleteApplication"
      },
      {
        "description": "Updates the name or description of the application.",
        "pathFragment": "/{appId}",
        "params": [],
        "method": "put",
        "name": "renameApplication",
        "entityName": "applicationUpdateObject",
        "entityType": "ApplicationUpdateObject"
      },
      {
        "description": "Gets the application info.",
        "pathFragment": "/{appId}",
        "params": [],
        "method": "get",
        "name": "getApplicationInfo"
      }
    ]
  },
  "import": {
    "className": "Import",
    "url": "/apps/import",
    "operations": [
      {
        "description": "Imports an application to LUIS, the application's JSON should be included in the request body. Returns new app ID.",
        "pathFragment": "",
        "params": [],
        "method": "post",
        "name": "importApplication",
        "entityName": "jSONApp",
        "entityType": "JSONApp"
      }
    ]
  },
  "assistants": {
    "className": "Assistants",
    "url": "/apps/assistants",
    "operations": [
      {
        "description": "Gets the endpoint URLs for the prebuilt Cortana applications.",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getPersonalAssistantApplications"
      }
    ]
  },
  "domains": {
    "className": "Domains",
    "url": "/apps/domains",
    "operations": [
      {
        "description": "Gets the available application domains.",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getLUISApplicationDomainsList"
      }
    ]
  },
  "usagescenarios": {
    "className": "Usagescenarios",
    "url": "/apps/usagescenarios",
    "operations": [
      {
        "description": "Gets the application available usage scenarios.",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getLUISApplicationUsageScenariosList"
      }
    ]
  },
  "cultures": {
    "className": "Cultures",
    "url": "/apps/cultures",
    "operations": [
      {
        "description": "Gets the supported LUIS application cultures.",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getLUISApplicationCulturesList"
      }
    ]
  },
  "querylogs": {
    "className": "Querylogs",
    "url": "/apps/{appId}/querylogs",
    "operations": [
      {
        "description": "Gets the query logs of the past month for the application.",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "downloadApplicationQueryLogs"
      }
    ]
  },
  "clone": {
    "className": "Clone",
    "url": "/apps/{appId}/versions/{versionId}/clone",
    "operations": [
      {
        "description": "Creates a new version equivalent to the current snapshot of the selected application version.",
        "pathFragment": "",
        "params": [],
        "method": "post",
        "name": "cloneVersion",
        "entityName": "taskUpdateObject",
        "entityType": "TaskUpdateObject"
      }
    ]
  },
  "publish": {
    "className": "Publish",
    "url": "/apps/{appId}/publish",
    "operations": [
      {
        "description": "Publishes a specific version of the application.",
        "pathFragment": "",
        "params": [],
        "method": "post",
        "name": "publishApplication",
        "entityName": "applicationPublishObject",
        "entityType": "ApplicationPublishObject"
      }
    ]
  },
  "versions": {
    "className": "Versions",
    "url": "/apps/{appId}/versions",
    "operations": [
      {
        "description": "Gets the application versions info.",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getApplicationVersionList"
      },
      {
        "description": "Deletes an application version.",
        "pathFragment": "/{versionId}/",
        "params": [],
        "method": "delete",
        "name": "deleteApplicationVersion"
      },
      {
        "description": "Updates the name or description of the application version.",
        "pathFragment": "/{versionId}/",
        "params": [],
        "method": "put",
        "name": "renameApplicationVersion",
        "entityName": "taskUpdateObject",
        "entityType": "TaskUpdateObject"
      },
      {
        "description": "Gets the task info.",
        "pathFragment": "/{versionId}/",
        "params": [],
        "method": "get",
        "name": "getApplicationVersion"
      },
      {
        "description": "Imports a new version into a LUIS application, the version's JSON should be included in in the request body.",
        "pathFragment": "/import",
        "params": [],
        "method": "post",
        "name": "importVersionToApplication",
        "entityName": "jSONApp",
        "entityType": "JSONApp"
      }
    ]
  },
  "export": {
    "className": "Export",
    "url": "/apps/{appId}/versions/{versionId}/export",
    "operations": [
      {
        "description": "Exports a LUIS application to JSON format.",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "exportApplicationVersion"
      }
    ]
  },
  "externalKeys": {
    "className": "ExternalKeys",
    "url": "/apps/{appId}/versions/{versionId}/externalKeys",
    "operations": [
      {
        "description": "Gets the given application versions's external keys.",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getApplicationVersionExternalApiKeys"
      },
      {
        "description": "Assigns an external API key to the given application according to the specified key type.",
        "pathFragment": "",
        "params": [],
        "method": "put",
        "name": "updateApplicationVersionExternalKey",
        "entityName": "externalKeyUpdateObject",
        "entityType": "ExternalKeyUpdateObject"
      }
    ]
  },
  "train": {
    "className": "Train",
    "url": "/apps/{appId}/versions/{versionId}/train",
    "operations": [
      {
        "description": "Gets the training status of all models (intents and entities) for the specified LUIS app. You must <a href=\"https://westus.dev.cognitive.microsoft.com/docs/services/5890b47c39e2bb17b84a55ff/operations/5890b47c39e2bb052c5b9c45\">call the train API</a> to train the LUIS app before you call this API to get training status.\r\n",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getVersionTrainingStatus"
      },
      {
        "description": "Sends a training request for a version of a specified LUIS app. \r\n\r\nThis POST request initiates a request asynchronously. To determine whether the training request is successful, submit a GET request to get training status.\r\n\r\n* **Note**: The application version is not fully trained unless all the models (intents and entities) are trained successfully or are up to date.\r\n\r\nTo verify training success, get the training status at least once after training is complete.",
        "pathFragment": "",
        "params": [],
        "method": "post",
        "name": "trainApplicationVersion"
      }
    ]
  },
  "settings": {
    "className": "Settings",
    "url": "/apps/{appId}/settings",
    "operations": [
      {
        "description": "Updates the application settings",
        "pathFragment": "",
        "params": [],
        "method": "put",
        "name": "updateApplicationSettings",
        "entityName": "applicationSettingUpdateObject",
        "entityType": "ApplicationSettingUpdateObject"
      },
      {
        "description": "Get the application settings",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getApplicationSettings"
      }
    ]
  },
  "suggest": {
    "className": "Suggest",
    "url": "/apps/{appId}/versions/{versionId}/suggest",
    "operations": [
      {
        "description": "Deleted an unlabelled utterance.",
        "pathFragment": "",
        "params": [],
        "method": "delete",
        "name": "deleteUnlabelledUtterance",
        "entityName": "body",
        "entityType": ""
      }
    ]
  },
  "permissions": {
    "className": "Permissions",
    "url": "/apps/{appId}/permissions",
    "operations": [
      {
        "description": "Replaces the current users access list with the one sent in the body.\r\nIf an empty list is sent, all access to other users will be removed.\r\n",
        "pathFragment": "",
        "params": [],
        "method": "put",
        "name": "updateAccessList",
        "entityName": "body",
        "entityType": ""
      },
      {
        "description": "Removed a user to the allowed list of users to access this LUIS application.\r\nUsers are removed using their email address.",
        "pathFragment": "",
        "params": [],
        "method": "delete",
        "name": "removeUserFromAccessList",
        "entityName": "body",
        "entityType": ""
      },
      {
        "description": "Adds a user to the allowed list of users to access this LUIS application.\r\nUsers are added using their email address.",
        "pathFragment": "",
        "params": [],
        "method": "post",
        "name": "addEmailToAccessList",
        "entityName": "body",
        "entityType": ""
      },
      {
        "description": "Gets the list of user emails that have permissions to access your application. ",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getUserAccessList"
      }
    ]
  },
  "endpoints": {
    "className": "Endpoints",
    "url": "/apps/{appId}/endpoints",
    "operations": [
      {
        "description": "Returns the available endpoint deployment regions and urls",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getEndpoints"
      }
    ]
  },
  "customprebuiltdomains": {
    "className": "Customprebuiltdomains",
    "url": "/apps/{appId}/versions/{versionId}/customprebuiltdomains",
    "operations": [
      {
        "description": "Adds a customizable prebuilt domain along with all of its models to this application.",
        "pathFragment": "",
        "params": [],
        "method": "post",
        "name": "addCustomPrebuiltDomain",
        "entityName": "prebuiltDomainCreateBaseObject",
        "entityType": "PrebuiltDomainCreateBaseObject"
      },
      {
        "description": "Deletes a prebuilt domain's models from the application.",
        "pathFragment": "/{domainName}",
        "params": [
          {
            "name": "domainName",
            "in": "path",
            "description": "Domain name",
            "required": true,
            "type": "string"
          }
        ],
        "method": "delete",
        "name": "deleteCustomPrebuiltDomain"
      },
      {
        "description": "Adds a prebuilt domain along with its models as a new application. Returns new app ID. ",
        "pathFragment": "",
        "params": [],
        "method": "post",
        "name": "addPrebuiltApplication",
        "entityName": "prebuiltDomainCreateObject",
        "entityType": "PrebuiltDomainCreateObject"
      },
      {
        "description": "Gets all the available custom prebuilt domains for all cultures",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getLUISPrebuiltDomainsList"
      },
      {
        "description": "Gets all the available custom prebuilt domains for a specific culture",
        "pathFragment": "/{culture}",
        "params": [
          {
            "name": "culture",
            "in": "path",
            "description": "Format - string. Culture",
            "required": true,
            "type": "string"
          }
        ],
        "method": "get",
        "name": "getLUISPrebuiltDomainsForCultureList"
      }
    ]
  },
  "customprebuiltintents": {
    "className": "Customprebuiltintents",
    "url": "/apps/{appId}/versions/{versionId}/customprebuiltintents",
    "operations": [
      {
        "description": "Gets custom prebuilt intents information of this application",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getCustomPrebuiltDomainIntentsList"
      },
      {
        "description": "Adds a custom prebuilt intent model to the application",
        "pathFragment": "",
        "params": [],
        "method": "post",
        "name": "addCustomPrebuiltIntent",
        "entityName": "prebuiltDomainModelCreateObject",
        "entityType": "PrebuiltDomainModelCreateObject"
      }
    ]
  },
  "customprebuiltentities": {
    "className": "Customprebuiltentities",
    "url": "/apps/{appId}/versions/{versionId}/customprebuiltentities",
    "operations": [
      {
        "description": "Gets all custom prebuilt entities information of this application",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getCustomPrebuiltDomainEntitiesList"
      },
      {
        "description": "Adds a custom prebuilt entity model to the application",
        "pathFragment": "",
        "params": [],
        "method": "post",
        "name": "addCustomPrebuiltEntity",
        "entityName": "prebuiltDomainModelCreateObject",
        "entityType": "PrebuiltDomainModelCreateObject"
      }
    ]
  },
  "customprebuiltmodels": {
    "className": "Customprebuiltmodels",
    "url": "/apps/{appId}/versions/{versionId}/customprebuiltmodels",
    "operations": [
      {
        "description": "Gets all custom prebuilt models information of this application",
        "pathFragment": "",
        "params": [],
        "method": "get",
        "name": "getCustomPrebuiltDomainModelsList"
      }
    ]
  }
}
