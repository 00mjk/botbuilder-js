<Agent xmlns="http://schemas.microsoft.com/ConversationalAgent/1.0">
  <AgentDefinition lang="en-us">
    <About>
      <CodeBehindClass>AppLogic</CodeBehindClass>
      <CodeBehindNamespace>MyConversation</CodeBehindNamespace>
    </About>
    <Task name="Greeting" doAction="Respond">
      <LUISRecognizer intentId="c421b949-e4e2-4e9b-b31c-def7725e054d" intentName="Greeting" appID="9971ff07-0004-40d0-a8a2-d63fe069a06b"></LUISRecognizer>
      <Respond name="Respond" beforeResponse="Respond_beforeResponse">
        <FeedbackOneOf>
          <Feedback adaptiveCardSrc="Respond_BingSports.json">Hello</Feedback>
        </FeedbackOneOf>
      </Respond>
    </Task>
    <Task name="Default" doAction="Respond">
      <CodeRecognizer onRun="default_onRun"></CodeRecognizer>
      <Respond name="Respond">
        <FeedbackOneOf>
          <Feedback>My bad. I do not understand that. Here are somethings you can try: [builtin.tasktips]</Feedback>
        </FeedbackOneOf>
      </Respond>
    </Task>
    <Task name="Guess the groove" doAction="DialogFlow">
      <LUISRecognizer intentId="058ee57d-54a7-4176-9b9d-38c191733fb0" intentName="gameEntry" appID="9971ff07-0004-40d0-a8a2-d63fe069a06b"></LUISRecognizer>
      <Respond name="Respond"></Respond>
      <DialogFlow name="root flow" isRootFlow="true">
        <Transitions initialState="Start">
          <Transition to="Game intro" from="Start"></Transition>
          <Transition to="have more turns" from="Game intro"></Transition>
          <Transition to="score readout" from="have more turns" whenValueIs="No"></Transition>
          <Transition to="turn prep" from="have more turns" whenValueIs="Yes"></Transition>
          <Transition to="outcome" from="Turn prompt"></Transition>
          <Transition to="Return" from="score readout"></Transition>
          <Transition to="Turn prompt" from="turn prep"></Transition>
          <Transition to="Play hint" from="outcome" whenValueIs="Hint"></Transition>
          <Transition to="Answer readout" from="outcome" whenValueIs="Giveup"></Transition>
          <Transition to="Validate guess" from="outcome" whenValueIs="Guess"></Transition>
          <Transition to="Cancel readout" from="outcome" whenValueIs="cancel"></Transition>
          <Transition to="outcome" from="Play hint"></Transition>
          <Transition to="have more turns" from="Answer readout"></Transition>
          <Transition to="Guess Feedback" from="Validate guess"></Transition>
          <Transition to="score readout" from="cancel and score"></Transition>
          <Transition to="cancel and score" from="Cancel readout"></Transition>
          <Transition to="have more turns" from="Guess Feedback"></Transition>
        </Transitions>
        <Initial name="Start"></Initial>
        <Return name="Return" outcome="Success"></Return>
        <Respond name="Game intro" beforeResponse="Gameintro_beforeResponse">
          <Feedback>Let&apos;s play Guess That Groove! I&apos;ll play three clips. Tell me the name of the song or artist for one point, or name both for three.  </Feedback>
        </Respond>
        <Process name="have more turns" onRun="havemoreturns_onRun"></Process>
        <Prompt name="Turn prompt" beforeResponse="Turnprompt_beforeResponse" promptWhen="Turnprompt_promptWhen" repromptWhen="Turnprompt_repromptWhen">
          <FeedbackOneOf forTurn="0">
            <Feedback>[AskForGuessTemplate]</Feedback>
          </FeedbackOneOf>
          <FeedbackOneOf forTurn="1">
            <Feedback>Sorry I did not catch that. What&apos;s your guess again?</Feedback>
          </FeedbackOneOf>
          <FeedbackOneOf forTurn="2">
            <Feedback>Sorry, I do not understand. What&apos;s your guess?</Feedback>
          </FeedbackOneOf>
          <LUISRecognizer intentId="7503bfed-ab8a-4903-9073-ae5b72043999" intentName="guessSongIntent" appID="9971ff07-0004-40d0-a8a2-d63fe069a06b"></LUISRecognizer>
          <Entity name="hint" src="LUIS" entityType="Simple"></Entity>
          <Entity name="cancel" src="LUIS" entityType="Simple"></Entity>
          <Entity name="giveup" src="LUIS" entityType="Simple"></Entity>
        </Prompt>
        <Respond name="score readout">
          <Feedback>[ScoreTemplate]</Feedback>
        </Respond>
        <Process name="turn prep" onRun="turnprep_onRun"></Process>
        <Process name="outcome" onRun="outcome_onRun"></Process>
        <Prompt name="Play hint" beforeResponse="Playhint_beforeResponse" promptWhen="Playhint_promptWhen" repromptWhen="Turnprompt_repromptWhen">
          <FeedbackOneOf forTurn="0">
            <Feedback>OK, the artist is {qartist}. Now can you guess the title?</Feedback>
          </FeedbackOneOf>
          <FeedbackOneOf forTurn="1">
            <Feedback>Sorry, I do not understand. What&apos;s your guess?</Feedback>
          </FeedbackOneOf>
          <FeedbackOneOf forTurn="2">
            <Feedback>Sorry I did not catch that. What&apos;s your guess again?</Feedback>
          </FeedbackOneOf>
          <LUISRecognizer intentId="7503bfed-ab8a-4903-9073-ae5b72043999" intentName="guessSongIntent" appID="9971ff07-0004-40d0-a8a2-d63fe069a06b"></LUISRecognizer>
          <Entity name="hint" src="LUIS" entityType="Simple"></Entity>
          <Entity name="cancel" src="LUIS" entityType="Simple"></Entity>
          <Entity name="giveup" src="LUIS" entityType="Simple"></Entity>
        </Prompt>
        <Respond name="Answer readout">
          <FeedbackPerModality>
            <Speak>&lt;speak version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/2001/10/synthesis&quot; xmlns:mstts=&quot;http://www.w3.org/2001/mstts&quot; xmlns:emo=&quot;http://www.w3.org/2009/10/emotionml&quot; xml:lang=&quot;en-us&quot;&gt;&lt;emo:emotion&gt;&lt;emo:category name=&quot;Neutral&quot; value=&quot;1.0&quot;/&gt; &lt;/emo:emotion&gt;&lt;audio src=&quot;{guessOutComeEffect}&quot;/&gt;[GotBothWrong] That was {SongTitle} by {Artist}.&lt;/speak&gt;</Speak>
            <Display>[GotBothWrong]</Display>
          </FeedbackPerModality>
        </Respond>
        <Process name="Validate guess" onRun="Validateguess_onRun"></Process>
        <Process name="cancel and score" onRun="cancelandscore_onRun"></Process>
        <Respond name="Cancel readout">
          <FeedbackPerModality>
            <Speak>Sure. Cancelling game play and finalizing your score.</Speak>
            <Display>Sure. Cancelling game play and finalizing your score...</Display>
          </FeedbackPerModality>
        </Respond>
        <Respond name="Guess Feedback">
          <Feedback>[GuessFeedbackTemplate]</Feedback>
        </Respond>
      </DialogFlow>
    </Task>
    <Task name="Echo task" doAction="Respond">
      <CodeRecognizer name="Echo taskRecognizer" onRun="Echotask_if_onRun"></CodeRecognizer>
      <Entity name="Message" src="Code"></Entity>
      <Respond name="Respond">
        <Feedback>Echo back - {Message}</Feedback>
      </Respond>
    </Task>
    <ConditionalResponseTemplate name="AskForGuessTemplate" onRun="AskForGuessTemplate_onRun">
      <SwitchCase>
        <Case value="2">
          <FeedbackPerModality>
            <Speak>&lt;speak version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/2001/10/synthesis&quot; xmlns:mstts=&quot;http://www.w3.org/2001/mstts&quot; xmlns:emo=&quot;http://www.w3.org/2009/10/emotionml&quot; xml:lang=&quot;en-us&quot;&gt;&lt;emo:emotion&gt;&lt;emo:category name=&quot;Neutral&quot; value=&quot;1.0&quot;/&gt; &lt;/emo:emotion&gt;Alright, last one.&lt;audio src=&quot;{url}&quot;/&gt;Survey says?&lt;/speak&gt;</Speak>
            <Display>Survey says?</Display>
          </FeedbackPerModality>
        </Case>
        <Case value="1">
          <FeedbackPerModality>
            <Speak>&lt;speak version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/2001/10/synthesis&quot; xmlns:mstts=&quot;http://www.w3.org/2001/mstts&quot; xmlns:emo=&quot;http://www.w3.org/2009/10/emotionml&quot; xml:lang=&quot;en-us&quot;&gt;&lt;emo:emotion&gt;&lt;emo:category name=&quot;Neutral&quot; value=&quot;1.0&quot;/&gt; &lt;/emo:emotion&gt;Here&apos;s the next one. &lt;audio src=&quot;{url}&quot;/&gt;What is it?&lt;/speak&gt;</Speak>
            <Display>What is it?</Display>
          </FeedbackPerModality>
        </Case>
        <Case value="0">
          <FeedbackPerModality>
            <Speak>&lt;speak version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/2001/10/synthesis&quot; xmlns:mstts=&quot;http://www.w3.org/2001/mstts&quot; xmlns:emo=&quot;http://www.w3.org/2009/10/emotionml&quot; xml:lang=&quot;en-us&quot;&gt;&lt;emo:emotion&gt;&lt;emo:category name=&quot;Neutral&quot; value=&quot;1.0&quot;/&gt; &lt;/emo:emotion&gt;OK, here&apos;s your first clip. &lt;audio src=&quot;{url}&quot;/&gt;Now, what&apos;s your guess?&lt;/speak&gt;</Speak>
            <Display>What&apos;s your guess?</Display>
          </FeedbackPerModality>
        </Case>
      </SwitchCase>
    </ConditionalResponseTemplate>
    <ConditionalResponseTemplate name="GuessFeedbackTemplate" onRun="GuessFeedbackTemplate_onRun">
      <SwitchCase>
        <Case value="gotBothRight">
          <FeedbackPerModality>
            <Speak>[GotBothRight] That&apos;s {title} by {qartist}.</Speak>
            <Display>[GotBothRight]</Display>
          </FeedbackPerModality>
        </Case>
        <Case value="gotArtist">
          <FeedbackPerModality>
            <Speak>[GotOneRight] Yes, that was {qartist} singing {title}.</Speak>
            <Display>[GotOneRight]</Display>
          </FeedbackPerModality>
        </Case>
        <Case value="gotSong">
          <FeedbackPerModality>
            <Speak>[GotOneRight] Yes, that was {title} by {qartist}.</Speak>
            <Display>[GotOneRight]</Display>
          </FeedbackPerModality>
        </Case>
        <Case value="else">
          <FeedbackPerModality>
            <Speak>[GotBothWrong] That was {title} by {qartist}.</Speak>
            <Display>[GotBothWrong]</Display>
          </FeedbackPerModality>
        </Case>
      </SwitchCase>
    </ConditionalResponseTemplate>
    <ConditionalResponseTemplate name="GotBothRight" onRun="AskForGuessTemplate_onRun">
      <SwitchCase>
        <Case value="0">
          <FeedbackPerModality>
            <Speak>&lt;speak version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/2001/10/synthesis&quot; xmlns:mstts=&quot;http://www.w3.org/2001/mstts&quot; xmlns:emo=&quot;http://www.w3.org/2009/10/emotionml&quot; xml:lang=&quot;en-us&quot;&gt;&lt;emo:emotion&gt;&lt;emo:category name=&quot;Neutral&quot; value=&quot;1.0&quot;/&gt; &lt;/emo:emotion&gt;&lt;audio src=&quot;{guessOutComeEffect}&quot;/&gt;3 points!&lt;/speak&gt;</Speak>
            <Display>Three points!</Display>
          </FeedbackPerModality>
        </Case>
        <Case value="1">
          <FeedbackPerModality>
            <Speak>&lt;speak version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/2001/10/synthesis&quot; xmlns:mstts=&quot;http://www.w3.org/2001/mstts&quot; xmlns:emo=&quot;http://www.w3.org/2009/10/emotionml&quot; xml:lang=&quot;en-us&quot;&gt;&lt;emo:emotion&gt;&lt;emo:category name=&quot;Neutral&quot; value=&quot;1.0&quot;/&gt; &lt;/emo:emotion&gt;&lt;audio src=&quot;{guessOutComeEffect}&quot;/&gt;A 3 pointer!&lt;/speak&gt;</Speak>
            <Display>A 3-pointer!</Display>
          </FeedbackPerModality>
        </Case>
        <Case value="2">
          <FeedbackPerModality>
            <Speak>&lt;speak version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/2001/10/synthesis&quot; xmlns:mstts=&quot;http://www.w3.org/2001/mstts&quot; xmlns:emo=&quot;http://www.w3.org/2009/10/emotionml&quot; xml:lang=&quot;en-us&quot;&gt;&lt;emo:emotion&gt;&lt;emo:category name=&quot;Neutral&quot; value=&quot;1.0&quot;/&gt; &lt;/emo:emotion&gt;&lt;audio src=&quot;{guessOutComeEffect}&quot;/&gt; Right on, 3 point play!&lt;/speak&gt;</Speak>
            <Display>Right on, 3-point play!</Display>
          </FeedbackPerModality>
        </Case>
      </SwitchCase>
    </ConditionalResponseTemplate>
    <ConditionalResponseTemplate name="GotOneRight" onRun="AskForGuessTemplate_onRun">
      <SwitchCase>
        <Case value="0">
          <FeedbackPerModality>
            <Speak>&lt;speak version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/2001/10/synthesis&quot; xmlns:mstts=&quot;http://www.w3.org/2001/mstts&quot; xmlns:emo=&quot;http://www.w3.org/2009/10/emotionml&quot; xml:lang=&quot;en-us&quot;&gt;&lt;emo:emotion&gt;&lt;emo:category name=&quot;Neutral&quot; value=&quot;1.0&quot;/&gt; &lt;/emo:emotion&gt;&lt;audio src=&quot;{guessOutComeEffect}&quot;/&gt;Two points!&lt;/speak&gt;</Speak>
            <Display>One point!</Display>
          </FeedbackPerModality>
        </Case>
        <Case value="1">
          <FeedbackPerModality>
            <Speak>&lt;speak version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/2001/10/synthesis&quot; xmlns:mstts=&quot;http://www.w3.org/2001/mstts&quot; xmlns:emo=&quot;http://www.w3.org/2009/10/emotionml&quot; xml:lang=&quot;en-us&quot;&gt;&lt;emo:emotion&gt;&lt;emo:category name=&quot;Neutral&quot; value=&quot;1.0&quot;/&gt; &lt;/emo:emotion&gt;&lt;audio src=&quot;{guessOutComeEffect}&quot;/&gt;Partial credit!&lt;/speak&gt;</Speak>
            <Display>Partial credit!</Display>
          </FeedbackPerModality>
        </Case>
        <Case value="2">
          <FeedbackPerModality>
            <Speak>&lt;speak version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/2001/10/synthesis&quot; xmlns:mstts=&quot;http://www.w3.org/2001/mstts&quot; xmlns:emo=&quot;http://www.w3.org/2009/10/emotionml&quot; xml:lang=&quot;en-us&quot;&gt;&lt;emo:emotion&gt;&lt;emo:category name=&quot;Neutral&quot; value=&quot;1.0&quot;/&gt; &lt;/emo:emotion&gt;&lt;audio src=&quot;{guessOutComeEffect}&quot;/&gt;That&apos;s worth two points.&lt;/speak&gt;</Speak>
            <Display>That&apos;s worth one point.</Display>
          </FeedbackPerModality>
        </Case>
      </SwitchCase>
    </ConditionalResponseTemplate>
    <ConditionalResponseTemplate name="GotBothWrong" onRun="AskForGuessTemplate_onRun">
      <SwitchCase>
        <Case value="0">
          <Feedback>Not so much</Feedback>
        </Case>
        <Case value="1">
          <Feedback>Oh snap.</Feedback>
        </Case>
        <Case value="2">
          <Feedback>Nice try.</Feedback>
        </Case>
      </SwitchCase>
    </ConditionalResponseTemplate>
    <ConditionalResponseTemplate name="ScoreTemplate" onRun="ScoreTemplate_onRun">
      <SwitchCase>
        <Case value="0">
          <Feedback>Sorry, looks like you were shut out. It&apos;s only up from here.</Feedback>
        </Case>
        <Case value="1">
          <Feedback>You earned one point. At least you got on the board.</Feedback>
        </Case>
        <Case value="2">
          <Feedback>You earned two points. The important thing is, you showed up.</Feedback>
        </Case>
        <Case value="3">
          <Feedback>You got three points. Nice hustle.</Feedback>
        </Case>
        <Case value="4">
          <Feedback>You scored four points. Keep practicing!</Feedback>
        </Case>
        <Case value="5">
          <Feedback>You scored five points. Not too shabby.</Feedback>
        </Case>
        <Case value="6">
          <Feedback>You earned six points. You might be a contender.</Feedback>
        </Case>
        <Case value="7">
          <Feedback>You scored seven points. You&apos;re a good listener.</Feedback>
        </Case>
        <Case value="8">
          <Feedback>You got eight points. So close to perfection.</Feedback>
        </Case>
        <Case value="9">
          <Feedback>Wow, nine points! You&apos;re a true audiophile.</Feedback>
        </Case>
      </SwitchCase>
    </ConditionalResponseTemplate>
  </AgentDefinition>
</Agent>
