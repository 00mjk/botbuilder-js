/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/userTokenMappers";
import * as Parameters from "../models/emulatorParameters";
import { OAuthApiClientContext } from "../oAuthApiClientContext";

/** Class representing a UserToken. */
export class Emulator {
  private readonly client: OAuthApiClientContext;

  /**
   * Create a UserToken.
   * @param {OAuthApiClientContext} client Reference to the service client.
   */
  constructor(client: OAuthApiClientContext) {
    this.client = client;
  }

  /**
   * @summary EmulateOAuthCards
   *
   * Tells the token service to emulate the sending of OAuthCards.
   *
   * @param {boolean} emulate If `true` the token service will emulate the sending of OAuthCards.
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse} The deserialized result object.
   *
   * @reject {Error|ServiceError} The error object.
   */
  emulateOAuthCardsWithHttpOperationResponse(emulate: boolean): Promise<msRest.HttpOperationResponse> {
    let emulateStr = (!!emulate).toString();
    return this.client.sendOperationRequest(
      {
        emulate: emulateStr
      },
      emulateOAuthCardsOperationSpec);
  }

  
  /**
   * @param {boolean} emulate
   *
   * @param {ServiceCallback} callback The callback.
   *
   * @returns {ServiceCallback} callback(err, result, request, operationRes)
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *                      {HttpOperationResponse} [response] - The HTTP Response stream if an error did not occur.
   */
  emulateOAuthCards(emulate: boolean): Promise<msRest.HttpOperationResponse>;
  emulateOAuthCards(emulate: boolean, callback?: msRest.ServiceCallback<void>): any {
    return msRest.responseToBody(this.emulateOAuthCards.bind(this), emulate, callback);
  }
}

export const EmulateOAuthCardsResponse: msRest.CompositeMapper = {
  serializedName: "EmulateOAuthCardsResponse",
  type: {
    name: "Composite",
    className: "EmulateOAuthCardsResponse",
    modelProperties: {
      result: {
        serializedName: "result",
        type: {
          name: "String"
        }
      }
    }
  }
};

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const emulateOAuthCardsOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "api/usertoken/emulateOAuthCards",
  queryParameters: [
    Parameters.emulate
  ],
  responses: {
    200: {
      bodyMapper: EmulateOAuthCardsResponse
    },
    404: {
      bodyMapper: EmulateOAuthCardsResponse
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};