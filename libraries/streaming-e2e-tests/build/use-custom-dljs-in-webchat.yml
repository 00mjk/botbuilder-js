steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: ReactApp
      path: $(ReactProjectDir)
  
  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: DirectLineJsTgz
      path: $(RootReactPiecesDir)

  - powershell: |
      Set-Location -Path "$(ReactProjectDir)"
      
      New-Item -Path . -Name ".npmrc" -ItemType "file" -Value "registry=https://botbuilder.myget.org/F/botbuilder-v4-js-daily/npm/"
    displayName: 'Create .npmrc for MyGet feed - https://botbuilder.myget.org/gallery/botbuilder-v4-js-daily'

  # - powershell: npm install $(RootReactPiecesDir)/botframework-directlinejs.tgz
  #   displayName: npm install botframework-directlinejs.tgz
  #   workingDirectory: $(ReactProjectDir)
  
  # - powershell: npm install dotenv
  #   displayName: 'npm install dotenv'
  #   workingDirectory: $(ReactProjectDir)

  - task: Cache@2
    displayName: Cache npm
    inputs:
    # TODO change key name, but keep it without a lock file to hash
      key: 'no-lock-cache-bfwc-dotenv-consecutive-in-same-job | npm | "$(Agent.OS)"'
      path: $(ReactProjectDir)/node_modules
      cacheHitVar: 'CacheRestored'

  - powershell: npm install botframework-webchat@4.9.2
    displayName: 'npm install botframework-webchat@4.9.2'
    workingDirectory: $(ReactProjectDir)
    condition: ne(variables.CacheRestored, 'true')
  
  - powershell: npm start
    displayName: 'Serve react-app (npm start)'
    workingDirectory: $(ReactProjectDir)
  
  - powershell: npm install
    displayName: 'npm install in tests directory'
    workingDirectory: $(TestsDir)

  - powershell: |
      Write-Host "Allowing time for React App to serve. Sleeping for 90 seconds..";
      Start-Sleep -Seconds 90;
    displayName: 'Sleep to allow React App to serve'

  - powershell: npm test
    displayName: 'Run Tests: npm test'
    workingDirectory: $(TestsDir)